{"version":3,"sources":["components/Table/Table.jsx","components/Jumbotron/Jumbotron.jsx","components/Search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","state","employees","filteredEmployees","search","getEmployees","axios","get","then","response","setState","data","results","catch","err","handleButtonClick","sortedEmployees","sort","a","b","nat","this","className","scope","onClick","map","src","picture","thumbnail","alt","name","first","login","uuid","last","href","email","dob","age","gender","Component","Jumbotron","style","padding","textAlign","backgroundColor","color","fontFamily","fontSize","Search","handleInputChange","event","target","value","filter","employee","includes","onChange","type","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.011ae924.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Table.css\";\n\nclass Table extends Component {\n  state = {\n    employees: [],\n    filteredEmployees: [],\n    search: \"\",\n  };\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  getEmployees = () => {\n    axios\n      .get(\"https://randomuser.me/api/?results=25\")\n      .then((response) => {\n        // console.log(response.data.results);\n        // console.log(response.data.results.name.first);\n        // console.log(response.data.results);\n        this.setState({\n          employees: response.data.results,\n          filteredEmployees: response.data.results,\n        });\n      })\n      .catch((err) => {\n        if (err) throw err;\n      });\n  };\n\n  handleButtonClick = () => {\n    // console.log(\"clicked button\");\n    const sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n      return a.nat < b.nat ? -1 : 1;\n    });\n    // console.log(sortedEmployees);\n    this.setState({\n      employees: sortedEmployees,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">\n                    <h2>Image</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>First Name</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>Last Name</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>Email</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>Age</h2>\n                  </th>\n\n                  <th scope=\"col\">\n                    <h2>Gender</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>\n                      Country\n                      <button onClick={this.handleButtonClick}>\n                        <i className=\"fas fa-caret-down\"></i>\n                      </button>\n                    </h2>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.filteredEmployees.map((results) => {\n                  return (\n                    <tr>\n                      <th scope=\"row\">\n                        <img\n                          src={results.picture.thumbnail}\n                          className=\"img-fluid\"\n                          alt=\"thumbnail\"\n                        />\n                      </th>\n                      <td key={results.login.uuid}>{results.name.first}</td>\n                      <td>{results.name.last}</td>\n                      <td>\n                        <a href=\"mailto::{results.name.email}\">\n                          {results.email}\n                        </a>\n                      </td>\n                      <td>{results.dob.age}</td>\n                      <td>{results.gender}</td>\n                      <td>{results.nat}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\n\nfunction Jumbotron() {\n  return (\n    <>\n      <div\n        className=\"jumbotron\"\n        style={{\n          padding: \"20px\",\n          textAlign: \"center\",\n          backgroundColor: \"#000080\",\n          color: \"#e6e6ff\",\n          fontFamily: \"'Patrick Hand', cursive\",\n        }}\n      >\n        <h1 className=\"display-4\" style={{ fontSize: \"60px\" }}>\n          <i className=\"fad fa-address-book\"></i> Employee Directory\n        </h1>\n        <p>\n          Click the caret to sort by country or search the input by last name\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default Jumbotron;\n","import React, { Component } from \"react\";\nimport \"./Search.css\";\n\nclass Search extends Component {\n  state = {\n    employees: [],\n    filteredEmployees: [],\n    search: \"\",\n  };\n\n  handleInputChange = (event) => {\n    // Getting the value and name of the input which triggered the change\n    const { name, value } = event.target;\n\n    const filteredEmployees = this.state.employees.filter((employee) => {\n      return employee.name.last.includes(value);\n    });\n\n    this.setState({\n      [name]: value,\n      filteredEmployees: filteredEmployees,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-sm-12\">\n          <input\n            value={this.state.search}\n            name=\"search\"\n            onChange={this.handleInputChange}\n            type=\"text\"\n            placeholder=\"search names\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","// import { HashRouter as Router, Route } from \"react-router-dom\";\n// import About from \"./components/containers/About/About\";\nimport Table from \"./components/Table/Table\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport Search from \"./components/Search/Search\"\n\n\nfunction App() {\n  return (\n    <>\n      <Jumbotron />\n      <Search />\n      <Table />\n    </>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}