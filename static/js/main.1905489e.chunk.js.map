{"version":3,"sources":["components/Table/Table.jsx","components/Jumbotron/Jumbotron.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","state","employees","filteredEmployees","search","getEmployees","axios","get","then","response","setState","data","results","catch","err","handleInputChange","event","target","name","value","filter","employee","last","includes","handleButtonClick","sortedEmployees","sort","a","b","nat","this","className","onChange","type","placeholder","style","margin","width","fontSize","borderRadius","padding","fontFamily","scope","onClick","map","src","picture","thumbnail","alt","first","login","uuid","href","email","dob","age","gender","Component","Jumbotron","textAlign","backgroundColor","color","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QA8IeA,G,kNAzIbC,MAAQ,CACNC,UAAW,GACXC,kBAAmB,GACnBC,OAAQ,I,EAOVC,aAAe,WACbC,IACGC,IAAI,yCACJC,MAAK,SAACC,GAIL,EAAKC,SAAS,CACZR,UAAWO,EAASE,KAAKC,QACzBT,kBAAmBM,EAASE,KAAKC,aAGpCC,OAAM,SAACC,GACN,GAAIA,EAAK,MAAMA,M,EAIrBC,kBAAoB,SAACC,GAAW,IAAD,IAELA,EAAMC,OAAtBC,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,MAERhB,EAAoB,EAAKF,MAAMC,UAAUkB,QAAO,SAACC,GACrD,OAAOA,EAASH,KAAKI,KAAKC,SAASJ,MAGrC,EAAKT,UAAL,mBACGQ,EAAOC,GADV,kCAEqBhB,GAFrB,K,EAMFqB,kBAAoB,WAElB,IAAMC,EAAkB,EAAKxB,MAAME,kBAAkBuB,MAAK,SAACC,EAAGC,GAC5D,OAAOD,EAAEE,IAAMD,EAAEC,KAAO,EAAI,KAG9B,EAAKnB,SAAS,CACZR,UAAWuB,K,kEAzCbK,KAAKzB,iB,+BA8CL,OACE,qBAAK0B,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,uBACEZ,MAAOW,KAAK7B,MAAMG,OAClBc,KAAK,SACLc,SAAUF,KAAKf,kBACfkB,KAAK,OACLC,YAAY,eACZC,MAAO,CACLC,OAAQ,OACRC,MAAO,MACPC,SAAU,OACVC,aAAc,OACdC,QAAS,OACTC,WAAY,6BAGhB,wBAAOV,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIW,MAAM,MAAV,SACE,yCAEF,oBAAIA,MAAM,MAAV,SACE,8CAEF,oBAAIA,MAAM,MAAV,SACE,6CAEF,oBAAIA,MAAM,MAAV,SACE,yCAEF,oBAAIA,MAAM,MAAV,SACE,uCAGF,oBAAIA,MAAM,MAAV,SACE,0CAEF,oBAAIA,MAAM,MAAV,SACE,yCAEE,wBAAQC,QAASb,KAAKN,kBAAtB,SACE,mBAAGO,UAAU,kCAMvB,gCACGD,KAAK7B,MAAME,kBAAkByC,KAAI,SAAChC,GACjC,OACE,+BACE,oBAAI8B,MAAM,MAAV,SACE,qBACEG,IAAKjC,EAAQkC,QAAQC,UACrBhB,UAAU,YACViB,IAAI,gBAGR,6BAA8BpC,EAAQM,KAAK+B,OAAlCrC,EAAQsC,MAAMC,MACvB,6BAAKvC,EAAQM,KAAKI,OAClB,6BACE,mBAAG8B,KAAK,+BAAR,SACGxC,EAAQyC,UAGb,6BAAKzC,EAAQ0C,IAAIC,MACjB,6BAAK3C,EAAQ4C,SACb,6BAAK5C,EAAQiB,4B,GA7Hf4B,cCsBLC,MAxBf,WACE,OACE,mCACE,sBACE3B,UAAU,YACVI,MAAO,CACLK,QAAS,OACTmB,UAAW,SACXC,gBAAiB,UACjBC,MAAO,UACPpB,WAAY,2BAPhB,UAUE,qBAAIV,UAAU,YAAYI,MAAO,CAAEG,SAAU,QAA7C,UACE,mBAAGP,UAAU,wBADf,yBAGA,0GCHO+B,MAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1905489e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Table.css\";\n\nclass Table extends Component {\n  state = {\n    employees: [],\n    filteredEmployees: [],\n    search: \"\",\n  };\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  getEmployees = () => {\n    axios\n      .get(\"https://randomuser.me/api/?results=25\")\n      .then((response) => {\n        // console.log(response.data.results);\n        // console.log(response.data.results.name.first);\n        // console.log(response.data.results);\n        this.setState({\n          employees: response.data.results,\n          filteredEmployees: response.data.results,\n        });\n      })\n      .catch((err) => {\n        if (err) throw err;\n      });\n  };\n\n  handleInputChange = (event) => {\n    // Getting the value and name of the input which triggered the change\n    const { name, value } = event.target;\n\n    const filteredEmployees = this.state.employees.filter((employee) => {\n      return employee.name.last.includes(value);\n    });\n\n    this.setState({\n      [name]: value,\n      filteredEmployees: filteredEmployees,\n    });\n  };\n\n  handleButtonClick = () => {\n    // console.log(\"clicked button\");\n    const sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n      return a.nat < b.nat ? -1 : 1;\n    });\n    // console.log(sortedEmployees);\n    this.setState({\n      employees: sortedEmployees,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <input\n              value={this.state.search}\n              name=\"search\"\n              onChange={this.handleInputChange}\n              type=\"text\"\n              placeholder=\"search names\"\n              style={{\n                margin: \"20px\",\n                width: \"65%\",\n                fontSize: \"24px\",\n                borderRadius: \"15px\",\n                padding: \"20px\",\n                fontFamily: \"'Patrick Hand', cursive\",\n              }}\n            />\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">\n                    <h2>Image</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>First Name</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>Last Name</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>Email</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>Age</h2>\n                  </th>\n\n                  <th scope=\"col\">\n                    <h2>Gender</h2>\n                  </th>\n                  <th scope=\"col\">\n                    <h2>\n                      Country\n                      <button onClick={this.handleButtonClick}>\n                        <i className=\"fas fa-caret-down\"></i>\n                      </button>\n                    </h2>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.filteredEmployees.map((results) => {\n                  return (\n                    <tr>\n                      <th scope=\"row\">\n                        <img\n                          src={results.picture.thumbnail}\n                          className=\"img-fluid\"\n                          alt=\"thumbnail\"\n                        />\n                      </th>\n                      <td key={results.login.uuid}>{results.name.first}</td>\n                      <td>{results.name.last}</td>\n                      <td>\n                        <a href=\"mailto::{results.name.email}\">\n                          {results.email}\n                        </a>\n                      </td>\n                      <td>{results.dob.age}</td>\n                      <td>{results.gender}</td>\n                      <td>{results.nat}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\n\nfunction Jumbotron() {\n  return (\n    <>\n      <div\n        className=\"jumbotron\"\n        style={{\n          padding: \"20px\",\n          textAlign: \"center\",\n          backgroundColor: \"#000080\",\n          color: \"#e6e6ff\",\n          fontFamily: \"'Patrick Hand', cursive\",\n        }}\n      >\n        <h1 className=\"display-4\" style={{ fontSize: \"60px\" }}>\n          <i className=\"fad fa-address-book\"></i> Employee Directory\n        </h1>\n        <p>\n          Click the caret to sort by country or search the input by last name\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default Jumbotron;\n","// import { HashRouter as Router, Route } from \"react-router-dom\";\n// import About from \"./components/containers/About/About\";\nimport Table from \"./components/Table/Table\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\n\nfunction App() {\n  return (\n    <>\n      <Jumbotron />\n      <Table />\n    </>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}